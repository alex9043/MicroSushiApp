spring:
  application:
    name: gateway-service
    rabbitmq:
      host: ${RABBITMQ_HOST}
      port: ${RABBITMQ_PORT}
      username: ${RABBITMQ_USERNAME}
      password: ${RABBITMQ_PASSWORD}
  cloud:
    gateway:
        routes:
          - id: account-service
            uri: lb://account-service
            predicates:
              - Path=/api/v1/account/**
            filters:
              - name: CustomAuthFilter
                args:
                  validatePath: http://auth-service/api/v1/auth/validate-token
                  excludedPaths:
                    - method: POST
                      path: /api/v1/account/register
                    - method: POST
                      path: /api/v1/account/login
                    - method: POST
                      path: /api/v1/account/refresh-token
          - id: auth-service
            uri: lb://auth-service
            predicates:
              - Path=/api/v1/auth/**
            filters:
              - name: BlockPublicAccessFilter
          - id: product-service
            uri: lb://product-service
            predicates:
              - Path=/api/v1/product/**
            filters:
              - name: CustomAuthFilter
                args:
                  validatePath: http://auth-service/api/v1/auth/validate-token
                  excludedPaths:
                    - method: GET
                      path: /api/v1/product
server:
  port: 8080
eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE}
management:
  endpoints:
    web:
      exposure:
        include: "*"
  prometheus:
    metrics:
      export:
        enabled: true
logging:
  file:
    name: /var/log/${spring.application.name}/${spring.application.name}.log
  pattern:
    file: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"